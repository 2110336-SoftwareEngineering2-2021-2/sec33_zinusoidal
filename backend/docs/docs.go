// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/fortune168/v1/all_services": {
            "get": {
                "description": "Return array of search result if success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get all services in platform",
                "operationId": "GetAllServicesHandler",
                "responses": {
                    "200": {
                        "description": "services",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/available_schedule/{id}": {
            "post": {
                "description": "See body for request details and uuid in param. Return calendar in format if success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Get schedule in calendar's month format",
                "operationId": "ScheduleHandler",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "month",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "year",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid values",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schedule.ScheduleDto"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error logs",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/available_time/{id}": {
            "post": {
                "description": "See body for request details and uuid in param. Return freetime in day format if success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Get free time of this provider",
                "operationId": "FreeTimeHandler",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "month",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "year",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid values",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "free time",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error logs",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/block": {
            "post": {
                "description": "provider the id of person to be blocked",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "block user from sending message to you",
                "operationId": "BlockHandler",
                "parameters": [
                    {
                        "description": "id of person to be blocked",
                        "name": "BlockReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.BlockRequest"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to block user",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or invalid jwt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/confirm_email/{key}": {
            "post": {
                "description": "Send the key from confirmation email to activate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Use the key in the confirmation email to activate",
                "operationId": "ActivateEmailHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid values",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "email confirmed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/customer/{id}": {
            "get": {
                "description": "send id to get customer profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get customer profile",
                "operationId": "GetCustomerProfileHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "customer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.CustomerProfile"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message, ex: customer not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/customer_register": {
            "post": {
                "description": "See body for request details. Return message if registration is success. Also send the confirmation email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Customer registeration and send confirmation email",
                "operationId": "CustomerRegisterHandler",
                "parameters": [
                    {
                        "type": "string",
                        "name": "citizenId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "firstName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "lastName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "profile pic file",
                        "name": "profilePic",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "registration is not successful",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/delete_account": {
            "post": {
                "description": "Just send the request to delete account. Note that this is a hard delete, no way to recover account later.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Delete account for both customer and provider",
                "operationId": "DeleteAccountHandler",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to delete account",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid jwt token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/landing_page_info": {
            "get": {
                "description": "Return all info that in landing page if success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Get all info for landing page",
                "operationId": "GetLandingPageInfoHandler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/search.LandingPageInfo"
                        }
                    },
                    "500": {
                        "description": "error log",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/login": {
            "post": {
                "description": "login by username and password, return jwt token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login by unsername and password",
                "operationId": "LoginHandler",
                "parameters": [
                    {
                        "description": "username and password for login",
                        "name": "LoginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/make_appointment": {
            "post": {
                "description": "customer provider information about service they want and make request to provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointment"
                ],
                "summary": "Customer make appointment with provider",
                "operationId": "MakeAppointmentHandler",
                "parameters": [
                    {
                        "description": "Detail of services",
                        "name": "AppointmentReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointment.AppointmentRequest"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to make appointment, also this must be customer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or invalid jwt(must be customer)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/my_schedule/{id}": {
            "post": {
                "description": "See body for request details and uuid in param. Return calendar in day format if success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Get schedule in calendar's day format",
                "operationId": "MyScheduleHandler",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "month",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "year",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid values",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schedule.Appointment"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error logs",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/password_edit": {
            "patch": {
                "description": "send jwt token to verify, and re-enter password again",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "edit password",
                "operationId": "EditPasswordHandler",
                "parameters": [
                    {
                        "description": "customer id",
                        "name": "PasswordEditReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.PasswordEditRequest"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to edit password",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password Updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or invalid jwt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message, ex: customer not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/provider/{id}": {
            "get": {
                "description": "send id to get provider profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get provider profile",
                "operationId": "GetProviderProfileHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "provider id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.ProviderProfile"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message, ex: provider not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/provider_edit": {
            "patch": {
                "description": "send jwt token to edit profile of provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "edit provider profile",
                "operationId": "EditProviderHandler",
                "parameters": [
                    {
                        "type": "string",
                        "name": "biography",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "firstName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "fortuneList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "lastName",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "schedule",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "workSchedule",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "profile pic file",
                        "name": "profilePic",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to edit profile",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.ProviderProfile"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/provider_register": {
            "post": {
                "description": "See body for request details. Return message if registration is success and send confirmation email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Provider registeration and send confirmation email",
                "operationId": "ProviderRegisterHandler",
                "parameters": [
                    {
                        "type": "string",
                        "name": "biography",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "citizenId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "firstName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "fortuneList",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "lastName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "schedule",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "workSchedule",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "profile pic file",
                        "name": "profilePic",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "registration is not successful",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/response_appointment/{app_id}/{status}": {
            "post": {
                "description": "provider can accept and reject the request. The status can be complete after the service and reviewed if customer submit review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "appointment"
                ],
                "summary": "change status of request",
                "operationId": "ResponseAppointmentHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "appointment_id",
                        "name": "app_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4"
                        ],
                        "type": "string",
                        "description": "status to be changed, 1 reject, 2 accepted, 3 complete, 4 reviewed",
                        "name": "status",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to change status, also this must be customer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or invalid jwt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/review": {
            "post": {
                "description": "See body for request details. Return message if review is success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Post review for this appointment",
                "operationId": "ReviewRatingHandler",
                "parameters": [
                    {
                        "type": "string",
                        "name": "appointmentId",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "score",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error logs",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/review/{user_id}": {
            "get": {
                "description": "Enter provider's provider in param. Return all review of this provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "review"
                ],
                "summary": "Get Provider review",
                "operationId": "GetReviewHandler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid values",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/review.ProviderReview"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/search": {
            "post": {
                "description": "See body for request details. Return array of search result if success",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search for provider by search argument",
                "operationId": "SearchHandler",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "fortuneType",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "keyword",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "maxPrice",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "maxRating",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "minPrice",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "name": "minRating",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/profile.ProviderProfile"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/send_message": {
            "post": {
                "description": "if message is not null, the endpoint will send message, otherwise create new chatroom(if not exist)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "send message to other users",
                "operationId": "SendMessageHandler",
                "parameters": [
                    {
                        "description": "id to person who will receive message and text",
                        "name": "SendMessageReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.SendMessageRequest"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to send message",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or invalid jwt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/test": {
            "get": {
                "description": "Dummy function for testing, will return the time at midnigth of 2014-05-22",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Dummy function, will return the time at midnigth of 2014-05-22",
                "operationId": "TestHandler",
                "responses": {
                    "200": {
                        "description": "2014-05-22T00:00:00Z",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "should not happened?",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/fortune168/v1/unblock": {
            "post": {
                "description": "unblock user to allow message from them",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "unblock user",
                "operationId": "UnBlockHandler",
                "parameters": [
                    {
                        "description": "id of person to be unblocked",
                        "name": "UnBlockReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.BlockRequest"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Send token if log-in, to check authority to unblock user",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or invalid jwt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "appointment.AppointmentRequest": {
            "type": "object",
            "required": [
                "date",
                "providerId"
            ],
            "properties": {
                "appointment": {
                    "$ref": "#/definitions/model.Appointment"
                },
                "date": {
                    "type": "string"
                },
                "providerId": {
                    "type": "string"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "profile_image": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "chat.BlockRequest": {
            "type": "object",
            "required": [
                "blockedUserId"
            ],
            "properties": {
                "blockedUserId": {
                    "type": "string"
                }
            }
        },
        "chat.SendMessageRequest": {
            "type": "object",
            "required": [
                "receiverId"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "receiverId": {
                    "type": "string"
                }
            }
        },
        "model.Appointment": {
            "type": "object",
            "properties": {
                "appointmentList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AppointmentInfo"
                    }
                },
                "information": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.AppointmentInfo": {
            "type": "object",
            "properties": {
                "appointmentId": {
                    "type": "string"
                },
                "fortuneType": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "time": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Fortune": {
            "type": "object",
            "properties": {
                "fortuneType": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "model.WorkSchedule": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string"
                },
                "timeList": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "profile.CustomerProfile": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "profilePicUrl": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "profile.PasswordEditRequest": {
            "type": "object",
            "required": [
                "newPassword",
                "oldPassword"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "profile.ProviderProfile": {
            "type": "object",
            "properties": {
                "biography": {
                    "type": "string"
                },
                "bookedService": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "fortuneList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Fortune"
                    }
                },
                "lastName": {
                    "type": "string"
                },
                "maxPrice": {
                    "type": "integer"
                },
                "minPrice": {
                    "type": "integer"
                },
                "profilePicUrl": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "workSchedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WorkSchedule"
                    }
                }
            }
        },
        "review.ProviderReview": {
            "type": "object",
            "properties": {
                "reviewList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/review_repo.ReviewItem"
                    }
                }
            }
        },
        "review_repo.ReviewItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "profilePic": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "schedule.Appointment": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "time": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "schedule.ScheduleDto": {
            "type": "object",
            "properties": {
                "available_date": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schedule.WorkingDay"
                    }
                },
                "not_available_date": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "schedule.WorkingDay": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer"
                },
                "timeList": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "search.LandingPageInfo": {
            "type": "object",
            "properties": {
                "totalCustomer": {
                    "type": "integer"
                },
                "totalFortuneService": {
                    "type": "integer"
                },
                "totalProvider": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "zinusoidal-fortune.kirkpig.dev",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Fortune168 API documentation",
	Description:      "This is API documentation for zinusoidal-fortune.kirkpig.dev server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
